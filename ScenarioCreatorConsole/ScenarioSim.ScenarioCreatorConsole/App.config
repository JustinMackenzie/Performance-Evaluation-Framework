<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <connectionStrings>
    <add name="ScenarioContext" connectionString="mongodb://scenariosim-server:s4ULq4r6eEb8iuH@ds040089.mlab.com:40089/scenario-context"/>
  </connectionStrings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
  </startup>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <!--Aliases-->
    <alias alias="ISchemaManager" type="ScenarioSim.Services.ScenarioCreator.ISchemaManager, ScenarioSim.Services.ScenarioCreator" />
    <alias alias="IActorManager" type="ScenarioSim.Services.ScenarioCreator.IActorManager, ScenarioSim.Services.ScenarioCreator" />
    <alias alias="IScenarioManager" type="ScenarioSim.Services.ScenarioCreator.IScenarioManager, ScenarioSim.Services.ScenarioCreator" />
    <alias alias="IAssetManager" type="ScenarioSim.Services.ScenarioCreator.IAssetManager, ScenarioSim.Services.ScenarioCreator" />
    <alias alias="IProgramManager" type="ScenarioSim.Services.ScenarioCreator.IProgramManager, ScenarioSim.Services.ScenarioCreator" />
    <alias alias="ILogger" type="ScenarioSim.Services.Logging.ILogger, ScenarioSim.Services.Logging" />
    <alias alias="ISchemaRepository" type="ScenarioSim.Core.Interfaces.ISchemaRepository, ScenarioSim.Core.Interfaces" />
    <alias alias="IActorRepository" type="ScenarioSim.Core.Interfaces.IActorRepository, ScenarioSim.Core.Interfaces" />
    <alias alias="IScenarioRepository" type="ScenarioSim.Core.Interfaces.IScenarioRepository, ScenarioSim.Core.Interfaces" />
    <alias alias="IAssetRepository" type="ScenarioSim.Core.Interfaces.IAssetRepository, ScenarioSim.Core.Interfaces" />
    <alias alias="IProgramRepository" type="ScenarioSim.Core.Interfaces.IProgramRepository, ScenarioSim.Core.Interfaces" />
    <!--Container-->
    <container>
      <register type="ILogger" mapTo="ScenarioSim.Infrastructure.Logging.NLog.NLogLogger, ScenarioSim.Infrastructure.Logging.NLog" />
      <register type="ISchemaRepository" mapTo="ScenarioSim.Infrastructure.MongoDbRepositories.MongoDbSchemaRepository, ScenarioSim.Infrastructure.MongoDbRepositories">
        <constructor>
          <param name="connectionStringOrName" value="ScenarioContext" />
          <param name="databaseName" value="scenario-context" />
        </constructor>
      </register>
      <register type="IActorRepository" mapTo="ScenarioSim.Infrastructure.MongoDbRepositories.MongoDbActorRepository, ScenarioSim.Infrastructure.MongoDbRepositories">
        <constructor>
          <param name="connectionStringOrName" value="ScenarioContext" />
          <param name="databaseName" value="scenario-context" />
        </constructor>
      </register>
      <register type="IScenarioRepository" mapTo="ScenarioSim.Infrastructure.MongoDbRepositories.MongoDbScenarioRepository, ScenarioSim.Infrastructure.MongoDbRepositories">
        <constructor>
          <param name="connectionStringOrName" value="ScenarioContext" />
          <param name="databaseName" value="scenario-context" />
        </constructor>
      </register>
      <register type="IAssetRepository" mapTo="ScenarioSim.Infrastructure.MongoDbRepositories.MongoDbAssetRepository, ScenarioSim.Infrastructure.MongoDbRepositories">
        <constructor>
          <param name="connectionStringOrName" value="ScenarioContext" />
          <param name="databaseName" value="scenario-context" />
        </constructor>
      </register>
      <register type="IProgramRepository" mapTo="ScenarioSim.Infrastructure.MongoDbRepositories.MongoDbProgramRepository, ScenarioSim.Infrastructure.MongoDbRepositories">
        <constructor>
          <param name="connectionStringOrName" value="ScenarioContext" />
          <param name="databaseName" value="ScenarioContext" />
        </constructor>
      </register>
      <register type="ISchemaManager" mapTo="ScenarioSim.Infrastructure.ScenarioCreator.SchemaManager, ScenarioSim.Infrastructure.ScenarioCreator">
        <constructor>
          <param name="logger" type="ILogger" />
          <param name="repository" type="ISchemaRepository" />
        </constructor>
      </register>
      <register type="IActorManager" mapTo="ScenarioSim.Infrastructure.ScenarioCreator.ActorManager, ScenarioSim.Infrastructure.ScenarioCreator">
        <constructor>
          <param name="logger" type="ILogger" />
          <param name="repository" type="IActorRepository" />
        </constructor>
      </register>
      <register type="IScenarioManager" mapTo="ScenarioSim.Infrastructure.ScenarioCreator.ScenarioManager, ScenarioSim.Infrastructure.ScenarioCreator">
        <constructor>
          <param name="logger" type="ILogger" />
          <param name="repository" type="IScenarioRepository" />
        </constructor>
      </register>
      <register type="IAssetManager" mapTo="ScenarioSim.Infrastructure.ScenarioCreator.AssetManager, ScenarioSim.Infrastructure.ScenarioCreator">
        <constructor>
          <param name="logger" type="ILogger" />
          <param name="repository" type="IAssetRepository" />
        </constructor>
      </register>
      <register type="IProgramManager" mapTo="ScenarioSim.Infrastructure.ScenarioCreator.ProgramManager, ScenarioSim.Infrastructure.ScenarioCreator">
        <constructor>
          <param name="logger" type="ILogger" />
          <param name="repository" type="IProgramRepository" />
        </constructor>
      </register>
    </container>
  </unity>
</configuration>